# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      # Checkout code
      - uses: actions/checkout@v4

      # Skip CI if the commit message contains '[ci skip]' or '[skip ci]'
      - name: Check for [ci skip]
        id: skip_check
        run: |
          if git log -1 --pretty=%B | grep -iqE '\[ci skip\]|\[skip ci\]'; then
            echo "skip=true" >> $GITHUB_ENV
          else
            echo "skip=false" >> $GITHUB_ENV
          fi

      # Exit early if skip is true
      - name: Exit on [ci skip]
        if: env.skip == 'true'
        run: echo "Skipping CI as per commit message."

      # Setup Java
      - uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      # Build and verify
      - run: mvn --batch-mode --update-snapshots verify

      # Prepare the artifact for upload
      - run: mkdir staging && cp target/*.jar staging

      # Upload artifact
      - uses: actions/upload-artifact@v4
        with:
          name: Package
          path: staging

      # Optional: Uploads the full dependency graph to GitHub to improve the quality of Dependabot alerts this repository can receive
      - name: Update dependency graph
        uses: advanced-security/maven-dependency-submission-action@571e99aab1055c2e71a1e2309b9691de18d6b7d6
